{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"13kcc104Bdk3Ap-C6ov4V48dQOLTd_ppl","timestamp":1705321865320}],"authorship_tag":"ABX9TyNbb4NjywU/cwcOdd4MfQp5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"peCysw-50BO3","executionInfo":{"status":"ok","timestamp":1705319044630,"user_tz":-330,"elapsed":107233,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"outputs":[],"source":["%%capture\n","\n","!apt-get update\n","!apt-get install -y openjdk-8-jdk-headless -qq\n","!apt-get install maven -qq\n","\n","!curl -L \"https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz\" > spark-2.4.5-bin-hadoop2.7.tgz\n","!tar -xvf spark-2.4.5-bin-hadoop2.7.tgz\n","!pip install -q findspark\n","!pip install pyspark py4j\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import when\n","from pyspark.sql import functions\n","from pyspark.sql.types import IntegerType\n","from pyspark.sql.functions import col\n","#from pyspark.sql.Column import isNull\n","from pyspark.sql.functions import lit\n","spark = SparkSession.builder.master(\"local[*]\").config(\"spark.driver.memory\", \"16g\").getOrCreate()"]},{"cell_type":"code","source":["from pyspark.sql.functions import when\n","from pyspark.sql import SparkSession\n","\n","spark=SparkSession.builder.appName(\"CDC Pipeline\").getOrCreate()\n"],"metadata":{"id":"E-Ht15rL5HJD","executionInfo":{"status":"ok","timestamp":1705319077816,"user_tz":-330,"elapsed":1045,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["\n","fldf=spark.read.csv(\"LOAD00000001.csv\")\n","fldf=fldf.withColumnRenamed(\"_c0\",\"id\").withColumnRenamed(\"_c1\",\"FullName\").withColumnRenamed(\"_c2\",\"City\")\n","fldf.write.mode(\"overwrite\").csv(\"FinalOutput/finalFile.csv\")\n"],"metadata":{"id":"SW_5cy5p0Edc","executionInfo":{"status":"ok","timestamp":1705319326632,"user_tz":-330,"elapsed":1732,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Updated dataframe\n","\n","udf=spark.read.csv(\"20240115-101454203.csv\")\n","udf=udf.withColumnRenamed(\"_c0\",\"action\").withColumnRenamed(\"_c1\",\"id\").withColumnRenamed(\"_c2\",\"FullName\").withColumnRenamed(\"_c3\",\"City\")\n","udf.show()\n","\n","udf2=spark.read.csv(\"20240115-101946772.csv\")\n","udf2=udf2.withColumnRenamed(\"_c0\",\"action\").withColumnRenamed(\"_c1\",\"id\").withColumnRenamed(\"_c2\",\"FullName\").withColumnRenamed(\"_c3\",\"City\")\n","udf2.show()\n","\n","# read full load data from here\n","ffdf=spark.read.csv(\"FinalOutput/finalFile.csv\")\n","ffdf=ffdf.withColumnRenamed(\"_c0\",\"id\").withColumnRenamed(\"_c1\",\"FullName\").withColumnRenamed(\"_c2\",\"City\")\n","ffdf.show()\n","\n","\n"],"metadata":{"id":"WuqwR5FtYf8o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1705321603900,"user_tz":-330,"elapsed":4023,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}},"outputId":"ee3cb939-282a-4dcd-9fe3-9db505cea7b1"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["+------+---+----------+--------+\n","|action| id|  FullName|    City|\n","+------+---+----------+--------+\n","|     U|  7|   ABC XYZ| Phoenix|\n","|     I|130|Alica Bing|New York|\n","+------+---+----------+--------+\n","\n","+------+---+-------------+--------+\n","|action| id|     FullName|    City|\n","+------+---+-------------+--------+\n","|     I|131| Malinda Bing| Detroit|\n","|     I|132|Chandler Bing|Portland|\n","|     U|  8|      ABC XYZ|  Denver|\n","|     D| 10|   Jack Hicks| Houston|\n","+------+---+-------------+--------+\n","\n","+---+----------------+-------------+\n","| id|        FullName|         City|\n","+---+----------------+-------------+\n","|  0|Herman Zimmerman|Oklahoma City|\n","|  1|        Lisa Ray|     Columbus|\n","|  2|  Terrell Reeves| Jacksonville|\n","|  3|   Steve Goodwin|    Charlotte|\n","|  4|       Leah Tran|      Detroit|\n","|  5|  Wilbert Holmes|   Washington|\n","|  6|    Mindy George|  Los Angeles|\n","|  7|       Rosa Huff|      Phoenix|\n","|  8|Clayton Jennings|       Denver|\n","|  9|     Darla Hayes|    Charlotte|\n","| 10|      Jack Hicks|      Houston|\n","| 11|Francis Davidson|       Austin|\n","| 12|  Jerome Padilla|San Francisco|\n","| 13|    Mamie Duncan|      Houston|\n","| 14|      Julia Cain|     San Jose|\n","| 15|    Leslie Klein|      Seattle|\n","| 16|   Isaac Bridges| Philadelphia|\n","| 17|   Martin Adkins|      Chicago|\n","| 18|   Vincent Perry|      Detroit|\n","| 19|  William Porter|   Fort Worth|\n","+---+----------------+-------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# actual CDC Change is happening here\n","\n","for row in udf.collect():\n","  if(row[\"action\"]== 'U'):\n","    ffdf=ffdf.withColumn(\"FullName\",when(ffdf[\"id\"]==row[\"id\"],row[\"FullName\"]).otherwise(ffdf[\"FullName\"]))  # whereever row id matches we will update\n","    ffdf=ffdf.withColumn(\"City\",when(ffdf[\"id\"]==row[\"id\"],row[\"City\"]).otherwise(ffdf[\"City\"]))  # whereever row id matches we will update\n","\n","\n","  if(row[\"action\"]=='I'):\n","    insertRow= [list(row)[1:]]\n","    columns=['id','FullName','City']\n","    newdf=spark.createDataFrame(insertRow,columns)\n","    ffdf=ffdf.union(newdf)\n","\n","  if(row[\"action\"]=='D'):\n","    ffdf=ffdf.filter(ffdf.id!=row[\"id\"])\n","\n","for row in udf2.collect():\n","  if(row[\"action\"]== 'U'):\n","    ffdf=ffdf.withColumn(\"FullName\",when(ffdf[\"id\"]==row[\"id\"],row[\"FullName\"]).otherwise(ffdf[\"FullName\"]))  # whereever row id matches we will update\n","    ffdf=ffdf.withColumn(\"City\",when(ffdf[\"id\"]==row[\"id\"],row[\"City\"]).otherwise(ffdf[\"City\"]))  # whereever row id matches we will update\n","\n","\n","  if(row[\"action\"]=='I'):\n","    insertRow= [list(row)[1:]]\n","    columns=['id','FullName','City']\n","    newdf=spark.createDataFrame(insertRow,columns)\n","    ffdf=ffdf.union(newdf)\n","\n","  if(row[\"action\"]=='D'):\n","    ffdf=ffdf.filter(ffdf.id!=row[\"id\"])\n","\n","\n","#ffdf.show()\n","ffdf.write.mode(\"overwrite\").csv(\"FinalOutput/finalFile.csv\")  # write output to file so after next batch we update latest data\n","\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rRumazr3tdSy","executionInfo":{"status":"ok","timestamp":1705321558097,"user_tz":-330,"elapsed":2281,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}},"outputId":"463f7448-0514-4567-d61f-378ba9eff488"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Row(action='U', id='7', FullName='ABC XYZ', City='Phoenix')\n","Row(action='I', id='130', FullName='Alica Bing', City='New York')\n","Row(action='I', id='131', FullName='Malinda Bing', City='Detroit')\n","Row(action='I', id='132', FullName='Chandler Bing', City='Portland')\n","Row(action='U', id='8', FullName='ABC XYZ', City='Denver')\n","Row(action='D', id='10', FullName='Jack Hicks', City='Houston')\n","+---+----------------+-------------+\n","| id|        FullName|         City|\n","+---+----------------+-------------+\n","|  0|Herman Zimmerman|Oklahoma City|\n","|  1|        Lisa Ray|     Columbus|\n","|  2|  Terrell Reeves| Jacksonville|\n","|  3|   Steve Goodwin|    Charlotte|\n","|  4|       Leah Tran|      Detroit|\n","|  5|  Wilbert Holmes|   Washington|\n","|  6|    Mindy George|  Los Angeles|\n","|  7|         ABC XYZ|      Phoenix|\n","|  8|         ABC XYZ|       Denver|\n","|  9|     Darla Hayes|    Charlotte|\n","| 11|Francis Davidson|       Austin|\n","| 12|  Jerome Padilla|San Francisco|\n","| 13|    Mamie Duncan|      Houston|\n","| 14|      Julia Cain|     San Jose|\n","| 15|    Leslie Klein|      Seattle|\n","| 16|   Isaac Bridges| Philadelphia|\n","| 17|   Martin Adkins|      Chicago|\n","| 18|   Vincent Perry|      Detroit|\n","| 19|  William Porter|   Fort Worth|\n","| 20|    Domingo Byrd|    Charlotte|\n","+---+----------------+-------------+\n","only showing top 20 rows\n","\n"]}]}]}