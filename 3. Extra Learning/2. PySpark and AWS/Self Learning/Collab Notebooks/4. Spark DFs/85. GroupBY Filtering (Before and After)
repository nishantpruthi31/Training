{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"VgLhn5ATVIKk"},"outputs":[],"source":["%%capture\n","\n","!apt-get update\n","!apt-get install -y openjdk-8-jdk-headless -qq\n","!apt-get install maven -qq\n","\n","!curl -L \"https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz\" > spark-2.4.5-bin-hadoop2.7.tgz\n","!tar -xvf spark-2.4.5-bin-hadoop2.7.tgz\n","!pip install -q findspark\n","!pip install pyspark py4j\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import when\n","from pyspark.sql import functions\n","from pyspark.sql.types import IntegerType\n","from pyspark.sql.functions import col\n","#from pyspark.sql.Column import isNull\n","from pyspark.sql.functions import lit\n","spark = SparkSession.builder.master(\"local[*]\").config(\"spark.driver.memory\", \"16g\").getOrCreate()"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"YV12JxkFfpQs","executionInfo":{"status":"ok","timestamp":1704892882725,"user_tz":-330,"elapsed":1322,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"outputs":[],"source":["\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import col,lit\n","from pyspark.sql.functions import sum,avg,max,min,mean,count\n","spark=SparkSession.builder.appName(\"Spark Dataframes\").getOrCreate()\n","\n"]},{"cell_type":"code","execution_count":20,"metadata":{"executionInfo":{"elapsed":1703,"status":"ok","timestamp":1704893263885,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"},"user_tz":-330},"id":"MAWrez_8eM06","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7e4d90ad-59fd-4090-bf26-f4da29b4a029"},"outputs":[{"output_type":"stream","name":"stdout","text":["+---+------+----------------+------+------+-----+--------------------+\n","|age|gender|            name|course|  roll|marks|               email|\n","+---+------+----------------+------+------+-----+--------------------+\n","| 28|Female| Hubert Oliveras|    DB|  2984|   59|Annika Hoffman_Na...|\n","| 29|Female|Toshiko Hillyard| Cloud| 12899|   62|Margene Moores_Ma...|\n","| 28|  Male|  Celeste Lollis|    PF| 21267|   45|Jeannetta Golden_...|\n","| 29|Female|    Elenore Choy|    DB| 32877|   29|Billi Clore_Mitzi...|\n","| 28|  Male|  Sheryll Towler|   DSA| 41487|   41|Claude Panos_Judi...|\n","| 28|  Male|  Margene Moores|   MVC| 52771|   32|Toshiko Hillyard_...|\n","| 28|  Male|     Neda Briski|   OOP| 61973|   69|Alberta Freund_El...|\n","| 28|Female|    Claude Panos| Cloud| 72409|   85|Sheryll Towler_Al...|\n","| 28|  Male|  Celeste Lollis|   MVC| 81492|   64|Nicole Harwood_Cl...|\n","| 29|  Male|  Cordie Harnois|   OOP| 92882|   51|Judie Chipps_Clem...|\n","| 29|Female|       Kena Wild|   DSA|102285|   35|Dustin Feagins_Ma...|\n","| 29|  Male| Ernest Rossbach|    DB|111449|   53|Maybell Duguay_Ab...|\n","| 28|Female|  Latia Vanhoose|    DB|122502|   27|Latia Vanhoose_Mi...|\n","| 29|Female|  Latia Vanhoose|   MVC|132110|   55|Eda Neathery_Nico...|\n","| 29|  Male|     Neda Briski|    PF|141770|   42|Margene Moores_Mi...|\n","| 29|Female|  Latia Vanhoose|    DB|152159|   27|Claude Panos_Sant...|\n","| 29|  Male|  Loris Crossett|   MVC|161771|   36|Mitzi Seldon_Jenn...|\n","| 29|  Male|  Annika Hoffman|   OOP|171660|   22|Taryn Brownlee_Mi...|\n","| 29|  Male|   Santa Kerfien|    PF|182129|   56|Judie Chipps_Tary...|\n","| 28|Female|Mickey Cortright|    DB|192537|   62|Ernest Rossbach_M...|\n","+---+------+----------------+------+------+-----+--------------------+\n","only showing top 20 rows\n","\n"]}],"source":["df=spark.read.options(header='True',inferSchema='True').csv('StudentData.csv')\n","df.show()"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":426,"status":"ok","timestamp":1704893279307,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"},"user_tz":-330},"id":"qgHaJLLDxDb0"},"outputs":[],"source":["df2=df.filter(df.gender=='Male')\n","df3=df2.groupBy(\"course\",\"gender\").agg(count('*').alias(\"total_enrollments\"))  # we are filtering than group by i.e. where class"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1458,"status":"ok","timestamp":1704893508987,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"},"user_tz":-330},"id":"u_AkB2dTxpMy","outputId":"01e0cf51-9564-4e8b-cc86-581721f968dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["+------+------+-----------------+\n","|course|gender|total_enrollments|\n","+------+------+-----------------+\n","|   OOP|  Male|               70|\n","|    DB|  Male|               82|\n","|   MVC|  Male|               86|\n","|    PF|  Male|               97|\n","| Cloud|  Male|               86|\n","|   DSA|  Male|               78|\n","+------+------+-----------------+\n","\n","+------+------+-----------------+\n","|course|gender|total_enrollments|\n","+------+------+-----------------+\n","|    DB|  Male|               82|\n","|   MVC|  Male|               86|\n","|    PF|  Male|               97|\n","| Cloud|  Male|               86|\n","|   DSA|  Male|               78|\n","+------+------+-----------------+\n","\n"]}],"source":["\n","# now we fill filter after group by , just like HAVING in sql\n","\n","df3.show()\n","\n","df3.filter(df3.total_enrollments>75).show()\n","\n","# one laternate method to combine both is to use col notation as that is not dependent , if use direct filter using df, that won't work\n","#df3=df2.groupBy(\"course\",\"gender\").agg(count('*').alias(\"total_enrollments\")).filter(col(\"total_enrollments\")>75)  # we are filtering than group by i.e. where class\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H7UYVQjEfFq8"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"11YM-lleSvtN7VXzuep2XS63Vi7Wta6I6","timestamp":1704893523757},{"file_id":"1yaR5AnPIUKlGbxaBCFaqGOibqyzKSsaE","timestamp":1703061654276},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1703060626608}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}