{"cells":[{"cell_type":"code","source":["%%capture\n","\n","!apt-get update\n","!apt-get install -y openjdk-8-jdk-headless -qq\n","!apt-get install maven -qq\n","\n","!curl -L \"https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz\" > spark-2.4.5-bin-hadoop2.7.tgz\n","!tar -xvf spark-2.4.5-bin-hadoop2.7.tgz\n","!pip install -q findspark\n","!pip install pyspark py4j\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import when\n","from pyspark.sql import functions\n","from pyspark.sql.types import IntegerType\n","from pyspark.sql.functions import col\n","#from pyspark.sql.Column import isNull\n","from pyspark.sql.functions import lit\n","spark = SparkSession.builder.master(\"local[*]\").config(\"spark.driver.memory\", \"16g\").getOrCreate()"],"metadata":{"id":"VgLhn5ATVIKk","executionInfo":{"status":"ok","timestamp":1703061986259,"user_tz":-330,"elapsed":265519,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["# Map is used as a maper of data from one state to other\n","# It will create a new RDD\n","# rdd.map(lambda x: x.split())\n","\n"],"metadata":{"id":"WrzX_u_eLz93","executionInfo":{"status":"ok","timestamp":1703062009077,"user_tz":-330,"elapsed":716,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["\n","from pyspark import SparkConf, SparkContext\n","conf = SparkConf().setAppName(\"Read File\")\n","sc = SparkContext.getOrCreate(conf=conf)   # we provide configuration\n"],"metadata":{"id":"8zB0OqJqUhAR","executionInfo":{"status":"ok","timestamp":1703062016900,"user_tz":-330,"elapsed":759,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["\n","rdd = sc.textFile('Sample.txt')  # this is a transformation\n"],"metadata":{"id":"mFSA-Hh8WznA","executionInfo":{"status":"ok","timestamp":1703062064643,"user_tz":-330,"elapsed":447,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["\n","#rdd.collect()\n","rdd2=rdd.map(lambda x: x.split(' '))  # split\n","rdd2.collect()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzJT8DnVXY23","executionInfo":{"status":"ok","timestamp":1703062683719,"user_tz":-330,"elapsed":713,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}},"outputId":"ecb579c6-4938-4196-d756-8d2efac9cac8"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['1', '2', '3', '4', '5'],\n"," ['3', '4', '5', '66', '77'],\n"," ['12', '43', '6', '7', '8'],\n"," ['12', '12', '33']]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# defining normal fxn instead of lambda fxn\n","\n","def foo(x):\n","  l=x.split(' ')\n","  l2=[]\n","  for s in l:\n","    l2.append(int(s)+2)\n","  return l2\n","\n","rdd3=rdd.map(foo)\n","rdd3.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sqjj7dEEcjax","executionInfo":{"status":"ok","timestamp":1703063037433,"user_tz":-330,"elapsed":1272,"user":{"displayName":"Nishant Pruthi","userId":"05492412063404871418"}},"outputId":"b7f7cb50-c44a-46f7-e5a0-a295f4436071"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[3, 4, 5, 6, 7], [5, 6, 7, 68, 79], [14, 45, 8, 9, 10], [14, 14, 35]]"]},"metadata":{},"execution_count":16}]}],"metadata":{"colab":{"provenance":[{"file_id":"11YM-lleSvtN7VXzuep2XS63Vi7Wta6I6","timestamp":1703063057624},{"file_id":"1yaR5AnPIUKlGbxaBCFaqGOibqyzKSsaE","timestamp":1703061654276},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1703060626608}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}